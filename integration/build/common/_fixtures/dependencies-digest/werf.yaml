project: none
configVersion: 1
---
image: dockerfile_image
dockerfile: Dockerfile
target: dockerfile_image
args:
  TEST: test
addHost:
- "docker:10.180.0.1"
---
image: dockerfile_image_based_on_stage
dockerfile: Dockerfile
target: dockerfile_image_based_on_stage
---
{{ range (list "image" "artifact") }}
{{ . }}: stapel_{{ . }}_shell
from: alpine
fromCacheVersion: test
git:
- add: /
  to: /app
  owner: user
  group: group
  includePaths:
  - a
  - b
  - c
  excludePaths:
  - a/a
  - a/b
  - a/c
  stageDependencies:
    install:
    - a
    beforeSetup:
    - b
    setup:
    - c
shell:
  beforeInstall:
  - date
  install:
  - "true"
  beforeSetup:
  - date
  setup:
  - "true"
  cacheVersion: test
  beforeInstallCacheVersion: test
  installCacheVersion: test
  beforeSetupCacheVersion: test
  setupCacheVersion: test
mount:
- from: build_dir
  to: /build
- from: tmp_dir
  to: /tmp
- fromPath: /tmp/test
  to: /from
import:
- artifact: import_artifact
  before: install
  add: /test
  to: /test
  owner: test
  group: test
  includePaths:
  - a
  - b
  - c
  excludePaths:
  - a/a
  - a/b
  - a/c
- image: import_image
  after: setup
  add: /test2
  to: /test2
  owner: test
  group: test
  includePaths:
  - a
  - b
  - c
  excludePaths:
  - a/a
  - a/b
  - a/c
{{ if eq . "image" }}
docker:
  VOLUME:
  - volume
  EXPOSE:
  - "80"
  ENV:
    test: test
  LABEL:
    test: test
  ENTRYPOINT: cmd
  CMD: cmd
  WORKDIR: /root
  USER: test
  HEALTHCHECK: CMD true
{{ end }}
---
{{ . }}: stapel_{{ . }}_ansible
from: alpine
fromCacheVersion: test
git:
- add: /
  to: /app
  owner: user
  group: group
  includePaths:
  - a
  - b
  - c
  excludePaths:
  - a/a
  - a/b
  - a/c
  stageDependencies:
    install:
    - a
    beforeSetup:
    - b
    setup:
    - c
ansible:
  beforeInstall:
  - shell: date
  install:
  - shell: "true"
  beforeSetup:
  - shell: date
  setup:
  - shell: "true"
  cacheVersion: test
  beforeInstallCacheVersion: test
  installCacheVersion: test
  beforeSetupCacheVersion: test
  setupCacheVersion: test
mount:
- from: build_dir
  to: /build
- from: tmp_dir
  to: /tmp
- fromPath: /tmp/test
  to: /from
import:
- artifact: import_artifact
  before: install
  add: /test
  to: /test
  owner: test
  group: test
  includePaths:
  - a
  - b
  - c
  excludePaths:
  - a/a
  - a/b
  - a/c
- image: import_image
  after: setup
  add: /test2
  to: /test2
  owner: test
  group: test
  includePaths:
  - a
  - b
  - c
  excludePaths:
  - a/a
  - a/b
  - a/c
{{ if eq . "image" }}
docker:
  VOLUME:
  - volume
  EXPOSE:
  - "80"
  ENV:
    test: test
  LABEL:
    test: test
  ENTRYPOINT: cmd
  CMD: cmd
  WORKDIR: /root
  USER: test
  HEALTHCHECK: CMD true
{{ end }}
---
{{ . }}: import_{{ . }}
from: alpine
shell:
  install:
    - mkdir -p /test /test2
---
{{ end }}
image: stapel_image_from_image
fromImage: stapel_image_shell
---
image: stapel_image_from_artifact
fromArtifact: stapel_artifact_shell
